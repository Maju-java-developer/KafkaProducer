server:
  port: 8070

spring:
  datasource:
    url: jdbc:mysql://mysql:3306/kafka_demo_db?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
#    url: jdbc:mysql://localhost:110/kafka_demo_db
    username: root
    password: root
    driver-class-name: com.mysql.cj.jdbc.Driver
  # Mail Configurations
  mail:
    host: smtp.gmail.com
    port: 587
    username: majidpaplu@gmail.com
    password: piwq zgud xome vzta
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect

  application:
    name: KafkaProducer

  kafka:
    bootstrap-servers: localhost:9092

    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

    consumer:
      group-id: demo-group
      auto-offset-reset: earliest
      enable-auto-commit: false
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.deserializer.value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer
        spring.json.trusted.packages: "sapphire.co.kafkaproducer.events"
        spring.json.value.default.type: sapphire.co.kafkaproducer.events.OrderPlacedEvent

    listener:
      missing-topics-fatal: false
      ack-mode: manual

my:
  kafka:
    producer:
      topics:
        notification: notification-event
        placed-order: order-placed-event
        inventory-update: inventory-update-event
    consumer:
      topics:
        notification: notification-event
        placed-order: order-placed-event
        inventory-update: inventory-update-event
        notification-dlt: notification.DLT
